<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<?xml-stylesheet ekr_test ?>
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="amd.20150913232631.1" a="E"><vh>@settings</vh>
<v t="amd.20150913232631.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="amd.20150913232631.3"><vh>@string initial_split_orientation = horizontal</vh></v>
<v t="amd.20150915153206.1" a="E"><vh>專案說明</vh>
<v t="amd.20150919102209.1"><vh>使用工具</vh>
<v t="amd.20150919112415.1"><vh>影片檔案</vh></v>
</v>
<v t="amd.20150919102541.1"><vh>pelican 與 Markdown</vh></v>
</v>
</v>
<v t="amd.20150919102739.1" a="E"><vh>專案架構</vh>
<v t="amd.20150919113520.1"><vh>@edit .gitignore</vh></v>
<v t="amd.20150919103428.1"><vh>reveal.js 設定</vh></v>
<v t="amd.20150919103341.1" a="E"><vh>Jupyter 設定</vh>
<v t="amd.20150919103923.1"><vh>設定檔案位置</vh></v>
<v t="amd.20150919104249.1"><vh>檢查 profile 位置</vh></v>
</v>
<v t="amd.20150919103357.1"><vh>pelican 設定</vh></v>
<v t="amd.20150920030003.1"><vh>IPython notebook 整合</vh></v>
<v t="amd.20150919112710.1" a="E"><vh>@path pelican</vh>
<v t="amd.20150919113340.1"><vh>以下為與 pelican 有關的設定檔案</vh></v>
<v t="amd.20150919113132.1"><vh>@edit publishconf.py</vh></v>
</v>
</v>
<v t="amd.20150919113957.1"><vh>以下為 pelican 文章</vh></v>
<v t="amd.20150919124128.1"><vh>@button pelican content</vh></v>
<v t="amd.20150919114010.1" a="E"><vh>@path pelican\content</vh>
<v t="amd.20150919114035.1"><vh>@edit 2016cphww1.md</vh></v>
</v>
<v t="amd.20150919120205.1"><vh>以下為 reveal 投影片</vh></v>
<v t="amd.20150915211341.1" a="E"><vh>@clean simplest.html</vh>
<v t="amd.20150917085040.1"><vh>檔案說明</vh></v>
<v t="amd.20150915211351.1" a="E"><vh>html 標註</vh>
<v t="amd.20150915211351.4" a="E"><vh>body 標註</vh>
<v t="amd.20150915211351.5" a="E"><vh>div class="reveal"</vh>
<v t="amd.20150915211351.6" a="E"><vh>div class="slides"</vh>
<v t="amd.20150915211351.7"><vh>投影頁面1 封面</vh></v>
<v t="40323250.20151010090542.1" a="E"><vh>投影頁面2 筆記</vh>
<v t="40323250.20151010090544.1"><vh>1</vh></v>
<v t="40323250.20151010090544.2"><vh>2</vh></v>
<v t="40323250.20151010090544.3"><vh>3</vh></v>
<v t="40323250.20151010090544.4"><vh>4</vh></v>
</v>
<v t="leo.20150923163632.1"><vh>投影頁面 自評與心得</vh></v>
<v t="40323250.20150925091408.1"><vh>投影頁面 參考資料</vh></v>
</v>
</v>
<v t="amd.20150915211351.15"><vh>script</vh></v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="40323250.20150925091408.1">&lt;section&gt;
    &lt;h3&gt;相關連結&lt;/h3&gt;
    
    &lt;li&gt;&lt;p align="left"&gt;&lt;a href="http://wordpress-2015course.rhcloud.com/?p=3643#more-3643"&gt;2015Fall CP&lt;/a&gt;
    &lt;li&gt;&lt;p align="left"&gt;&lt;a href="http://www.phd.com.tw/knowledge/html/article/"&gt;HTML語法&lt;/a&gt;
    &lt;li&gt;&lt;p align="left"&gt;&lt;a href="https://openshift.redhat.com/app/console/applications"&gt;Openshift&lt;/a&gt;
    &lt;li&gt;&lt;p align="left"&gt;&lt;a href="https://bitbucket.org/"&gt;Bitbucket&lt;/a&gt;
    &lt;li&gt;&lt;p align="left"&gt;&lt;a href="https://vimeo.com/"&gt;Vimeo&lt;/a&gt;
    &lt;li&gt;&lt;p align="left"&gt;&lt;a href="https://www.copy.com/page/"&gt;Copy.com&lt;/a&gt;
    &lt;li&gt;&lt;p align="left"&gt;&lt;a href="http://blog.kejyun.com/2013/06/Build-Web-Page-On-Github.html"&gt;gh-pages 相關說明&lt;/a&gt;
    &lt;hr&gt;
    &lt;p align="left"&gt;上述某些網站會因太久沒有使用而遭刪除帳號 , 網址也會停擺 , 有時間都要回去看一下&lt;/p&gt;
&lt;/section&gt;
				
</t>
<t tx="40323250.20151010090542.1">&lt;section&gt;
&lt;p&gt;
@others
&lt;/p&gt;
				&lt;/section&gt;
				
</t>
<t tx="40323250.20151010090544.1">&lt;section&gt;
    &lt;h3&gt;筆記&lt;/h3&gt;
    &lt;hr size="1" align="center" noshade width="100%" color=YELLOW&gt;
    &lt;p align="left"&gt;1. 如果從學校電腦抓12G的檔案 , leo 套件要自己下載 ,安裝到 site- package 裡面。 &lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;2. launchLeo.py 和 start 可以從老師提供的壓縮檔中找到 , 複製到相同路徑即可 ( start 多個啟動程序 )。&lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;3. 檢查分支 : git bramch  &lt;/p&gt;
    &lt;p align="left"&gt; 新建分支 : git branch (分支名稱)  &lt;/p&gt;
    &lt;p align="left"&gt; 切換分支 : git checkout (分支名稱)&lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;4. 因所在的分支不同 , 資料夾所顯示的檔案也有所不同 &lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;5. 新建的分支會複製原有的分支檔案&lt;/p&gt;
&lt;/section&gt;
				
</t>
<t tx="40323250.20151010090544.2">&lt;section&gt;
    &lt;p align="left"&gt;6. dir  : 檢察所屬分支的檔案數量和狀況&lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;7. git config (--global) user.name  .... , 括弧內若省略 , 此次僅為單
    一1次 , 若沒有省略 , 則以後皆為默認 &lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;8. REM = REMARK  ,  .bat 檔 = batch 批次檔  ,  -s = set 設定&lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;9.  reveal.leo 存檔之後所產生的simplest.html檔案 , 可以很方便的檢查近端leo的編輯狀況&lt;/p&gt;
    &lt;br&gt;
        &lt;p align="left"&gt;10. github 產生的倉儲可以依造自己所需 , 產生 https 或者 ssh 的clone  URL&lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;11. leo 檔案不正當的關閉 , 將導致 leo editor 出現錯誤而無法正常開啟&lt;/p&gt;
&lt;/section&gt;
				
</t>
<t tx="40323250.20151010090544.3">&lt;section&gt;
    &lt;p align="left"&gt;12. 如果leo出現問題無法開啟 , 試著將 home 底下的 .leo 資料夾刪除
    &lt;br&gt;
    &lt;p align="left"&gt;13. 如果推回遠端有問題 , 可能和 .git 檔 、  路徑錯誤 或 者其他問題
    &lt;br&gt;
    &lt;p align="left"&gt;14. 無法正常出現分頁頁面( io ) 網址的原因 : github 尚未進行 信箱認證 、 抓錯檔案等原因 &lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;15. 如果將老師的檔案推到自己倉儲的 master , 遠端頁面顯示404  File not found , 但是推到 gh-pages 卻會顯示網頁 , 代表 github 的 gh-pages  能支援靜態網站 &lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;16. 如果分支有新增資料，要先展開、提交之後才能再切換分支&lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;17. git rm 檔案名稱.副檔名 ( 移除檔案在近端動作即可 ) &lt;/p&gt;
&lt;/section&gt;
				
</t>
<t tx="40323250.20151010090544.4">&lt;section&gt;
    &lt;p align="left"&gt;18. git rm 資料夾名稱 -r 可刪除資料夾( 含內部文件 ) &lt;/p&gt;
    &lt;br&gt;
    &lt;p align="left"&gt;19. git push origin :分支名稱 ( 刪除github 分支 )&lt;/p&gt;
&lt;/section&gt;
				
</t>
<t tx="amd.20150913232631.1"></t>
<t tx="amd.20150913232631.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="amd.20150913232631.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="amd.20150915153206.1">2015.09.15

將 2014 的 index.html 與 cadpbw1.html 與 2015 最新的 reveal 框架檔案合併
此後將以 v31ref.html 中的語法為主

</t>
<t tx="amd.20150915211341.1">@language xml
@tabwidth -4
@others

</t>
<t tx="amd.20150915211351.1">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;最簡單的 reveal 超文件&lt;/title&gt;
&lt;link rel="stylesheet" href="css/reveal.min.css"&gt;
	&lt;link rel="stylesheet" href="css/theme/default.css" id="theme"&gt;	
	&lt;!--增加對於 IE 早期版本的支援 --&gt;
	&lt;!--[if lt IE 9]&gt;
	&lt;script src="lib/js/html5shiv.js"&gt;&lt;/script&gt;
	&lt;![endif]--&gt;
&lt;/head&gt;
@others
</t>
<t tx="amd.20150915211351.15">&lt;script src="lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="js/reveal.min.js"&gt;&lt;/script&gt;
&lt;script&gt;
    // 啟動 Reveal.
    Reveal.initialize({
    });
&lt;/script&gt;
	
</t>
<t tx="amd.20150915211351.4">&lt;body&gt;
@others
&lt;/body&gt;
</t>
<t tx="amd.20150915211351.5">&lt;!-- 將整個投影片包在 "reveal" class 中 --&gt;
&lt;div class="reveal"&gt;
@others
&lt;/div&gt;
</t>
<t tx="amd.20150915211351.6">&lt;!-- 將所有投影片包在 "slides" class 中 --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;
</t>
<t tx="amd.20150915211351.7">&lt;!-- 以下為投影片 --&gt;
&lt;!-- 每一個 section 都代表一張投影片,  --&gt;
&lt;!-- section 標註中的多 section 標註, 將往下垂直延伸 --&gt;
&lt;section&gt;
       &lt;p&gt;&lt;font size="5" face="Arial"&gt;&lt;marquee border="0"&gt;版本於 2015 / 10 / 10 更新&lt;/marquee&gt;&lt;/font&gt;&lt;/p&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;br&gt;	
    &lt;h3&gt;四設計二乙&lt;/h3&gt;
    &lt;h3&gt;40323250 詹偉志&lt;/h3&gt;
	
&lt;/section&gt;
	
</t>
<t tx="amd.20150917085040.1">&lt;!--
這個檔案展示了 reveal.js 投影片資料的基本架構
其中使用 "reveal" class 與 "slides" class 來界定投影片的資料範圍
而各投影片則以 &lt;section&gt;&lt;/section&gt; 標示
且支援平行與垂直的投影片配置方法
--&gt;
</t>
<t tx="amd.20150919102209.1">本專案

利用 Jupyter 產生 IPython notebook, 然後整合入 pelican 網誌

利用 github pages 在 github.io 網站上伺服網頁資料

利用 reveal.js 產生投影片

利用 pelican 與 Markdown 產生網誌文章

利用 disqus 建立互動留言系統</t>
<t tx="amd.20150919102541.1">在 Anaconda 3 中只要

    pip install pelican Markdown 

安裝 pelican 與 Markdown Python 模組即可

若是在 Ubuntu 中則可以透過

    sudo pip3 install pelican Markdown 

安裝 pelican 與 Markdown Python 模組</t>
<t tx="amd.20150919102739.1">主要為 reveal.js 的簡報目錄架構, 其他子目錄為

images - 存放簡報與 pelican 網誌所需要的影像檔案

pelican - 存放 pelican 專案資料檔, 並且設法讓 pelican 所產生的 output 檔案直接存放到上層 reveal.js 根目錄

notebook - 存放 Jupyter 的 IPython notebook 檔案, 然後再由 pelican 設定, 將內容放入 blog 文章中

</t>
<t tx="amd.20150919103341.1">REM start.bat 中 取電腦 IP 與 Jupyter 啟動

REM 取 IPV4 IP address
for /f "delims=[] tokens=2" %%a in ('ping -4 %computername% -n 1 ^| findstr "["') do (set thisip=%%a)
REM echo %thisip%
REM 取 IPV6 IP address
REM for /f "delims=[] tokens=2" %%a in ('ping %computername% -n 1 ^| findstr "["') do (set thisip=%%a)
REM echo %thisip%
REM 啟動 Jupyter
cd notebook
start %Disk%:\Anaconda3\python.exe "%Disk%:\Anaconda3\Scripts\ipython-script.py" notebook --ip=%thisip% --certfile=%Disk%:\home\ssl_cert.pem --profile=nbserver</t>
<t tx="amd.20150919103357.1">打算利用

pelican pelican -o ./../ -s publishconf.py

-o 指定 ouput 所在目錄, 這裡使用上一層目錄, 

-s 則指定 setting, 這裡採用 publishconf.py 中的設定

將位於專案中 pelican 目錄內的 .md 檔案, 轉為 html 網誌格式, 然後存在 reveal.js 的架構目錄中

也就是 index.html 是由 pelican 控制</t>
<t tx="amd.20150919103428.1"></t>
<t tx="amd.20150919103923.1">home/.ipython/profile_nbserver/ipython_notebook_config.py

內容為:

# Password to use for web authentication
c = get_config()
# password is  "2016cp"
c.NotebookApp.password = u'sha1:864c0bcdb94e:8a396ef692ef3cc552177f1b1c48cec70c7a32df'
c.NotebookApp.port = 8888

產生 password 的程式碼:

from IPython.lib import passwd
passwd()

</t>
<t tx="amd.20150919104249.1">@language python
# show 出 ipython notebook 所使用的 profile 目錄
# 這裡應該會傳回 {'location': 'y:\\home\\.ipython\\profile_nbserver'}
# 表示 custom.js 位於 'y:\\home\\.ipython\\profile_nbserver\\static\\custom'
'''在 custom.js 中加入
require(["base/js/events"], function (events) {
    events.on("app_initialized.NotebookApp", function () {
    /* load your extension here */
    IPython.load_extensions('read-only');
    });
});
就可以自動導入'y:\\home\\.ipython\\nbextensions\read-only.js' 延伸檔案
read-only toggle 為 Alt+R
'''
# 以下為操作方法
'''當使用者選擇某一 cell, 然後按下 Alt+R, 則 cell 內原本為灰色將會變成白色, 表示
cell 為 read only
''''''
import IPython
ip=IPython.get_ipython()
ip.config.ProfileDir </t>
<t tx="amd.20150919112415.1">使用 Vimeo</t>
<t tx="amd.20150919112710.1"></t>
<t tx="amd.20150919113340.1"></t>
<t tx="amd.20150919113957.1"></t>
<t tx="amd.20150919114010.1"></t>
<t tx="amd.20150919120205.1"></t>
<t tx="amd.20150919124128.1">@language python
import os
os.system('''pelican pelican/content -o ./ -s pelican/publishconf.py -t theme/pelican-bootstrap3
''')
g.es("pelican 執行完畢")</t>
<t tx="amd.20150920030003.1">必須使用 IPython 3.2.1

sudo pip3 install IPython[notebook]==3.2.1

因為 IPython 4.0 已經將 IPython notebook 分出去改名為 Jupyter

之後可能再測試 liquid_tags 是否能與 Jupyter 相容</t>
<t tx="leo.20150923163632.1">&lt;section&gt;
    &lt;h3&gt;自評&lt;/h3&gt;
    &lt;br&gt;
    &lt;p&gt;對門課秉持著做實驗的精神 , 雖然上課有很多不懂的地方 ,  但是回家都會一步一步的測試 , 也知道大概是哪個地方出問題 , 希望之後對自己的要求高一點&lt;/p&gt;
    &lt;p&gt;評分 :  90 &lt;/p&gt;
&lt;/section&gt;
				
</t>
</tnodes>
</leo_file>
